apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deploy
spec:
  selector:
    matchLabels:
      app: backend-deploy
  replicas: 1
  template:
    metadata:
      labels:
        app: backend-deploy
    spec:
      imagePullSecrets:
        - name: secret-insa
      containers:
        - name: backend
          image: "gitlab.insa-rennes.fr:5050/devops-2023/projet-cpoo-thuy-tu-thanh-tung/docker/back:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 4445

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deploy
spec:
  selector:
    matchLabels:
      app: frontend-deploy
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend-deploy
    spec:
      imagePullSecrets:
        - name: secret-insa
      containers:
        - name: frontend
          image: "gitlab.insa-rennes.fr:5050/devops-2023/projet-cpoo-thuy-tu-thanh-tung/docker/front:latest"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: NodePort
  ports:
    - port: 4445
      targetPort: 4445
  selector:
    app: backend-deploy

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: frontend-deploy

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: game-ingress
  annotations:
      # kubernetes.io/ingress.class: nginx # if k8s <1.19 I think
spec:
  ingressClassName: public # 'public' for microk8s > 1.20 I think, for other tools 'nginx'
  defaultBackend:
    service:
      name: frontend-service
      port:
        number: 8080
  rules:
  - host: localhost
  - http:
      paths: # you define here your reverse proxy (replaces nginx one)
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 4445
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 8080
